# Run test sample through PEPPRO
name: test

pep_version: 2.0.0
sample_table: "peppro_test.csv"

pipestat_results_file: "$PROCESSED/michal//peppro/peppro_test/test_project_pipestat_results.yaml"

looper:
  output_dir: "$PROCESSED/michal/peppro/peppro_test/"  # export PROCESSED="/path/to/your_output_folder/"
  pipeline_interfaces: ["$CODE/peppro/project_pipeline_interface.yaml"]  # export CODE="/path/to/your_tools_folder/"

sample_modifiers:
  append:
    pipeline_interfaces: ["$CODE/peppro/sample_pipeline_interface.yaml"]
    pipestat_results_file: "res_file"
    file_name_part: "test"    
    #prioritize: True  # Default is FALSE. Pass flag to prioritize features by the order they appear in the feat_annotation asset when calculating FRiF/PRiF
    #sob: True         # Default is FALSE. Pass flag to use seqOutBias for signal track generation and to incorporate mappability
    #no_scale: True    # Default is FALSE. Pass flag to not scale signal tracks
    #coverage: True    # Default is FALSE. Pass flag to use coverage when producing library complexity plots.
    #keep: True        # Default is FALSE. Pass flag to keep prealignment BAM files.
    #noFIFO: True      # Default is FALSE. Pass flag to NOT use named pipes during prealignments.
    #complexity: False # Default is TRUE.  Pass flag to disable library complexity calculation. Faster.
  derive:
    attributes: [read1, pipestat_results_file]
    sources:
        res_file: "$PROCESSED/michal//peppro/peppro_test/{sample_name}_pipestat_results.yaml"
        R1: "$CODE/peppro/examples/data/{file_name_part}_r1.fq.gz"
  imply:
    - if:
        organism: ["human", "Homo sapiens", "Human", "Homo_sapiens"]
      then:
        genome: "hg38"
        prealignments: "human_rDNA"
        adapter: "cutadapt" # Default
        dedup: "seqkit"     # Default
        trimmer: "seqtk"    # Default
        protocol: "pro"     # Default
        umi_len: "0"        # Default; no UMI
        max_len: "-1"       # Default; do NOT trim to a max length
